/*
 * Slurm Rest API
 * API to access and control Slurm.
 *
 * The version of the OpenAPI document: 0.0.37
 * Contact: sales@schedmd.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for V0037Partition
 */
public class V0037PartitionTest {
    private final V0037Partition model = new V0037Partition();

    /**
     * Model tests for V0037Partition
     */
    @Test
    public void testV0037Partition() {
        // TODO: test V0037Partition
    }

    /**
     * Test the property 'flags'
     */
    @Test
    public void flagsTest() {
        // TODO: test flags
    }

    /**
     * Test the property 'preemptionMode'
     */
    @Test
    public void preemptionModeTest() {
        // TODO: test preemptionMode
    }

    /**
     * Test the property 'allowedAllocationNodes'
     */
    @Test
    public void allowedAllocationNodesTest() {
        // TODO: test allowedAllocationNodes
    }

    /**
     * Test the property 'allowedAccounts'
     */
    @Test
    public void allowedAccountsTest() {
        // TODO: test allowedAccounts
    }

    /**
     * Test the property 'allowedGroups'
     */
    @Test
    public void allowedGroupsTest() {
        // TODO: test allowedGroups
    }

    /**
     * Test the property 'allowedQos'
     */
    @Test
    public void allowedQosTest() {
        // TODO: test allowedQos
    }

    /**
     * Test the property 'alternative'
     */
    @Test
    public void alternativeTest() {
        // TODO: test alternative
    }

    /**
     * Test the property 'billingWeights'
     */
    @Test
    public void billingWeightsTest() {
        // TODO: test billingWeights
    }

    /**
     * Test the property 'defaultMemoryPerCpu'
     */
    @Test
    public void defaultMemoryPerCpuTest() {
        // TODO: test defaultMemoryPerCpu
    }

    /**
     * Test the property 'defaultTimeLimit'
     */
    @Test
    public void defaultTimeLimitTest() {
        // TODO: test defaultTimeLimit
    }

    /**
     * Test the property 'deniedAccounts'
     */
    @Test
    public void deniedAccountsTest() {
        // TODO: test deniedAccounts
    }

    /**
     * Test the property 'deniedQos'
     */
    @Test
    public void deniedQosTest() {
        // TODO: test deniedQos
    }

    /**
     * Test the property 'preemptionGraceTime'
     */
    @Test
    public void preemptionGraceTimeTest() {
        // TODO: test preemptionGraceTime
    }

    /**
     * Test the property 'maximumCpusPerNode'
     */
    @Test
    public void maximumCpusPerNodeTest() {
        // TODO: test maximumCpusPerNode
    }

    /**
     * Test the property 'maximumMemoryPerNode'
     */
    @Test
    public void maximumMemoryPerNodeTest() {
        // TODO: test maximumMemoryPerNode
    }

    /**
     * Test the property 'maximumNodesPerJob'
     */
    @Test
    public void maximumNodesPerJobTest() {
        // TODO: test maximumNodesPerJob
    }

    /**
     * Test the property 'maxTimeLimit'
     */
    @Test
    public void maxTimeLimitTest() {
        // TODO: test maxTimeLimit
    }

    /**
     * Test the property 'minNodesPerJob'
     */
    @Test
    public void minNodesPerJobTest() {
        // TODO: test minNodesPerJob
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'nodes'
     */
    @Test
    public void nodesTest() {
        // TODO: test nodes
    }

    /**
     * Test the property 'overTimeLimit'
     */
    @Test
    public void overTimeLimitTest() {
        // TODO: test overTimeLimit
    }

    /**
     * Test the property 'priorityJobFactor'
     */
    @Test
    public void priorityJobFactorTest() {
        // TODO: test priorityJobFactor
    }

    /**
     * Test the property 'priorityTier'
     */
    @Test
    public void priorityTierTest() {
        // TODO: test priorityTier
    }

    /**
     * Test the property 'qos'
     */
    @Test
    public void qosTest() {
        // TODO: test qos
    }

    /**
     * Test the property 'state'
     */
    @Test
    public void stateTest() {
        // TODO: test state
    }

    /**
     * Test the property 'totalCpus'
     */
    @Test
    public void totalCpusTest() {
        // TODO: test totalCpus
    }

    /**
     * Test the property 'totalNodes'
     */
    @Test
    public void totalNodesTest() {
        // TODO: test totalNodes
    }

    /**
     * Test the property 'tres'
     */
    @Test
    public void tresTest() {
        // TODO: test tres
    }

}
