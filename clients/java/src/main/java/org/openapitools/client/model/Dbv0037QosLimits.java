/*
 * Slurm Rest API
 * API to access and control Slurm.
 *
 * The version of the OpenAPI document: 0.0.37
 * Contact: sales@schedmd.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.Arrays;
import org.openapitools.client.model.Dbv0037QosLimitsMax;
import org.openapitools.client.model.Dbv0037QosLimitsMin;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Assigned limits
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class Dbv0037QosLimits {
  public static final String SERIALIZED_NAME_FACTOR = "factor";
  @SerializedName(SERIALIZED_NAME_FACTOR)
  private BigDecimal factor;

  public static final String SERIALIZED_NAME_MAX = "max";
  @SerializedName(SERIALIZED_NAME_MAX)
  private Dbv0037QosLimitsMax max;

  public static final String SERIALIZED_NAME_MIN = "min";
  @SerializedName(SERIALIZED_NAME_MIN)
  private Dbv0037QosLimitsMin min;

  public Dbv0037QosLimits() {
  }

  public Dbv0037QosLimits factor(BigDecimal factor) {
    
    this.factor = factor;
    return this;
  }

   /**
   * factor to apply to TRES count for associations using this QOS
   * @return factor
  **/
  @javax.annotation.Nullable
  public BigDecimal getFactor() {
    return factor;
  }


  public void setFactor(BigDecimal factor) {
    this.factor = factor;
  }


  public Dbv0037QosLimits max(Dbv0037QosLimitsMax max) {
    
    this.max = max;
    return this;
  }

   /**
   * Get max
   * @return max
  **/
  @javax.annotation.Nullable
  public Dbv0037QosLimitsMax getMax() {
    return max;
  }


  public void setMax(Dbv0037QosLimitsMax max) {
    this.max = max;
  }


  public Dbv0037QosLimits min(Dbv0037QosLimitsMin min) {
    
    this.min = min;
    return this;
  }

   /**
   * Get min
   * @return min
  **/
  @javax.annotation.Nullable
  public Dbv0037QosLimitsMin getMin() {
    return min;
  }


  public void setMin(Dbv0037QosLimitsMin min) {
    this.min = min;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Dbv0037QosLimits dbv0037QosLimits = (Dbv0037QosLimits) o;
    return Objects.equals(this.factor, dbv0037QosLimits.factor) &&
        Objects.equals(this.max, dbv0037QosLimits.max) &&
        Objects.equals(this.min, dbv0037QosLimits.min);
  }

  @Override
  public int hashCode() {
    return Objects.hash(factor, max, min);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Dbv0037QosLimits {\n");
    sb.append("    factor: ").append(toIndentedString(factor)).append("\n");
    sb.append("    max: ").append(toIndentedString(max)).append("\n");
    sb.append("    min: ").append(toIndentedString(min)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("factor");
    openapiFields.add("max");
    openapiFields.add("min");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Element and throws an exception if issues found
  *
  * @param jsonElement JSON Element
  * @throws IOException if the JSON Element is invalid with respect to Dbv0037QosLimits
  */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!Dbv0037QosLimits.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in Dbv0037QosLimits is not found in the empty JSON string", Dbv0037QosLimits.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!Dbv0037QosLimits.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `Dbv0037QosLimits` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `max`
      if (jsonObj.get("max") != null && !jsonObj.get("max").isJsonNull()) {
        Dbv0037QosLimitsMax.validateJsonElement(jsonObj.get("max"));
      }
      // validate the optional field `min`
      if (jsonObj.get("min") != null && !jsonObj.get("min").isJsonNull()) {
        Dbv0037QosLimitsMin.validateJsonElement(jsonObj.get("min"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!Dbv0037QosLimits.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'Dbv0037QosLimits' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<Dbv0037QosLimits> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(Dbv0037QosLimits.class));

       return (TypeAdapter<T>) new TypeAdapter<Dbv0037QosLimits>() {
           @Override
           public void write(JsonWriter out, Dbv0037QosLimits value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public Dbv0037QosLimits read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of Dbv0037QosLimits given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of Dbv0037QosLimits
  * @throws IOException if the JSON string is invalid with respect to Dbv0037QosLimits
  */
  public static Dbv0037QosLimits fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, Dbv0037QosLimits.class);
  }

 /**
  * Convert an instance of Dbv0037QosLimits to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

