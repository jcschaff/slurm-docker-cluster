/*
 * Slurm Rest API
 * API to access and control Slurm.
 *
 * The version of the OpenAPI document: 0.0.37
 * Contact: sales@schedmd.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.Dbv0037AssociationShortInfo;
import org.openapitools.client.model.Dbv0037JobArray;
import org.openapitools.client.model.Dbv0037JobComment;
import org.openapitools.client.model.Dbv0037JobExitCode;
import org.openapitools.client.model.Dbv0037JobHet;
import org.openapitools.client.model.Dbv0037JobMcs;
import org.openapitools.client.model.Dbv0037JobRequired;
import org.openapitools.client.model.Dbv0037JobReservation;
import org.openapitools.client.model.Dbv0037JobState;
import org.openapitools.client.model.Dbv0037JobStep;
import org.openapitools.client.model.Dbv0037JobTime;
import org.openapitools.client.model.Dbv0037JobTres;
import org.openapitools.client.model.Dbv0037JobWckey;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Single job description
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class Dbv0037Job {
  public static final String SERIALIZED_NAME_ACCOUNT = "account";
  @SerializedName(SERIALIZED_NAME_ACCOUNT)
  private String account;

  public static final String SERIALIZED_NAME_COMMENT = "comment";
  @SerializedName(SERIALIZED_NAME_COMMENT)
  private Dbv0037JobComment comment;

  public static final String SERIALIZED_NAME_ALLOCATION_NODES = "allocation_nodes";
  @SerializedName(SERIALIZED_NAME_ALLOCATION_NODES)
  private String allocationNodes;

  public static final String SERIALIZED_NAME_ARRAY = "array";
  @SerializedName(SERIALIZED_NAME_ARRAY)
  private Dbv0037JobArray array;

  public static final String SERIALIZED_NAME_TIME = "time";
  @SerializedName(SERIALIZED_NAME_TIME)
  private Dbv0037JobTime time;

  public static final String SERIALIZED_NAME_ASSOCIATION = "association";
  @SerializedName(SERIALIZED_NAME_ASSOCIATION)
  private Dbv0037AssociationShortInfo association;

  public static final String SERIALIZED_NAME_CLUSTER = "cluster";
  @SerializedName(SERIALIZED_NAME_CLUSTER)
  private String cluster;

  public static final String SERIALIZED_NAME_CONSTRAINTS = "constraints";
  @SerializedName(SERIALIZED_NAME_CONSTRAINTS)
  private String constraints;

  public static final String SERIALIZED_NAME_DERIVED_EXIT_CODE = "derived_exit_code";
  @SerializedName(SERIALIZED_NAME_DERIVED_EXIT_CODE)
  private Dbv0037JobExitCode derivedExitCode;

  public static final String SERIALIZED_NAME_EXIT_CODE = "exit_code";
  @SerializedName(SERIALIZED_NAME_EXIT_CODE)
  private Dbv0037JobExitCode exitCode;

  public static final String SERIALIZED_NAME_FLAGS = "flags";
  @SerializedName(SERIALIZED_NAME_FLAGS)
  private List<String> flags;

  public static final String SERIALIZED_NAME_GROUP = "group";
  @SerializedName(SERIALIZED_NAME_GROUP)
  private String group;

  public static final String SERIALIZED_NAME_HET = "het";
  @SerializedName(SERIALIZED_NAME_HET)
  private Dbv0037JobHet het;

  public static final String SERIALIZED_NAME_JOB_ID = "job_id";
  @SerializedName(SERIALIZED_NAME_JOB_ID)
  private Integer jobId;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_MCS = "mcs";
  @SerializedName(SERIALIZED_NAME_MCS)
  private Dbv0037JobMcs mcs;

  public static final String SERIALIZED_NAME_NODES = "nodes";
  @SerializedName(SERIALIZED_NAME_NODES)
  private String nodes;

  public static final String SERIALIZED_NAME_PARTITION = "partition";
  @SerializedName(SERIALIZED_NAME_PARTITION)
  private String partition;

  public static final String SERIALIZED_NAME_PRIORITY = "priority";
  @SerializedName(SERIALIZED_NAME_PRIORITY)
  private Integer priority;

  public static final String SERIALIZED_NAME_QOS = "qos";
  @SerializedName(SERIALIZED_NAME_QOS)
  private String qos;

  public static final String SERIALIZED_NAME_REQUIRED = "required";
  @SerializedName(SERIALIZED_NAME_REQUIRED)
  private Dbv0037JobRequired required;

  public static final String SERIALIZED_NAME_KILL_REQUEST_USER = "kill_request_user";
  @SerializedName(SERIALIZED_NAME_KILL_REQUEST_USER)
  private String killRequestUser;

  public static final String SERIALIZED_NAME_RESERVATION = "reservation";
  @SerializedName(SERIALIZED_NAME_RESERVATION)
  private Dbv0037JobReservation reservation;

  public static final String SERIALIZED_NAME_STATE = "state";
  @SerializedName(SERIALIZED_NAME_STATE)
  private Dbv0037JobState state;

  public static final String SERIALIZED_NAME_STEPS = "steps";
  @SerializedName(SERIALIZED_NAME_STEPS)
  private List<Dbv0037JobStep> steps;

  public static final String SERIALIZED_NAME_TRES = "tres";
  @SerializedName(SERIALIZED_NAME_TRES)
  private Dbv0037JobTres tres;

  public static final String SERIALIZED_NAME_USER = "user";
  @SerializedName(SERIALIZED_NAME_USER)
  private String user;

  public static final String SERIALIZED_NAME_WCKEY = "wckey";
  @SerializedName(SERIALIZED_NAME_WCKEY)
  private Dbv0037JobWckey wckey;

  public static final String SERIALIZED_NAME_WORKING_DIRECTORY = "working_directory";
  @SerializedName(SERIALIZED_NAME_WORKING_DIRECTORY)
  private String workingDirectory;

  public Dbv0037Job() {
  }

  public Dbv0037Job account(String account) {
    
    this.account = account;
    return this;
  }

   /**
   * Account charged by job
   * @return account
  **/
  @javax.annotation.Nullable
  public String getAccount() {
    return account;
  }


  public void setAccount(String account) {
    this.account = account;
  }


  public Dbv0037Job comment(Dbv0037JobComment comment) {
    
    this.comment = comment;
    return this;
  }

   /**
   * Get comment
   * @return comment
  **/
  @javax.annotation.Nullable
  public Dbv0037JobComment getComment() {
    return comment;
  }


  public void setComment(Dbv0037JobComment comment) {
    this.comment = comment;
  }


  public Dbv0037Job allocationNodes(String allocationNodes) {
    
    this.allocationNodes = allocationNodes;
    return this;
  }

   /**
   * Nodes allocated to job
   * @return allocationNodes
  **/
  @javax.annotation.Nullable
  public String getAllocationNodes() {
    return allocationNodes;
  }


  public void setAllocationNodes(String allocationNodes) {
    this.allocationNodes = allocationNodes;
  }


  public Dbv0037Job array(Dbv0037JobArray array) {
    
    this.array = array;
    return this;
  }

   /**
   * Get array
   * @return array
  **/
  @javax.annotation.Nullable
  public Dbv0037JobArray getArray() {
    return array;
  }


  public void setArray(Dbv0037JobArray array) {
    this.array = array;
  }


  public Dbv0037Job time(Dbv0037JobTime time) {
    
    this.time = time;
    return this;
  }

   /**
   * Get time
   * @return time
  **/
  @javax.annotation.Nullable
  public Dbv0037JobTime getTime() {
    return time;
  }


  public void setTime(Dbv0037JobTime time) {
    this.time = time;
  }


  public Dbv0037Job association(Dbv0037AssociationShortInfo association) {
    
    this.association = association;
    return this;
  }

   /**
   * Get association
   * @return association
  **/
  @javax.annotation.Nullable
  public Dbv0037AssociationShortInfo getAssociation() {
    return association;
  }


  public void setAssociation(Dbv0037AssociationShortInfo association) {
    this.association = association;
  }


  public Dbv0037Job cluster(String cluster) {
    
    this.cluster = cluster;
    return this;
  }

   /**
   * Assigned cluster
   * @return cluster
  **/
  @javax.annotation.Nullable
  public String getCluster() {
    return cluster;
  }


  public void setCluster(String cluster) {
    this.cluster = cluster;
  }


  public Dbv0037Job constraints(String constraints) {
    
    this.constraints = constraints;
    return this;
  }

   /**
   * Constraints on job
   * @return constraints
  **/
  @javax.annotation.Nullable
  public String getConstraints() {
    return constraints;
  }


  public void setConstraints(String constraints) {
    this.constraints = constraints;
  }


  public Dbv0037Job derivedExitCode(Dbv0037JobExitCode derivedExitCode) {
    
    this.derivedExitCode = derivedExitCode;
    return this;
  }

   /**
   * Get derivedExitCode
   * @return derivedExitCode
  **/
  @javax.annotation.Nullable
  public Dbv0037JobExitCode getDerivedExitCode() {
    return derivedExitCode;
  }


  public void setDerivedExitCode(Dbv0037JobExitCode derivedExitCode) {
    this.derivedExitCode = derivedExitCode;
  }


  public Dbv0037Job exitCode(Dbv0037JobExitCode exitCode) {
    
    this.exitCode = exitCode;
    return this;
  }

   /**
   * Get exitCode
   * @return exitCode
  **/
  @javax.annotation.Nullable
  public Dbv0037JobExitCode getExitCode() {
    return exitCode;
  }


  public void setExitCode(Dbv0037JobExitCode exitCode) {
    this.exitCode = exitCode;
  }


  public Dbv0037Job flags(List<String> flags) {
    
    this.flags = flags;
    return this;
  }

  public Dbv0037Job addFlagsItem(String flagsItem) {
    if (this.flags == null) {
      this.flags = new ArrayList<>();
    }
    this.flags.add(flagsItem);
    return this;
  }

   /**
   * List of properties of job
   * @return flags
  **/
  @javax.annotation.Nullable
  public List<String> getFlags() {
    return flags;
  }


  public void setFlags(List<String> flags) {
    this.flags = flags;
  }


  public Dbv0037Job group(String group) {
    
    this.group = group;
    return this;
  }

   /**
   * User&#39;s group to run job
   * @return group
  **/
  @javax.annotation.Nullable
  public String getGroup() {
    return group;
  }


  public void setGroup(String group) {
    this.group = group;
  }


  public Dbv0037Job het(Dbv0037JobHet het) {
    
    this.het = het;
    return this;
  }

   /**
   * Get het
   * @return het
  **/
  @javax.annotation.Nullable
  public Dbv0037JobHet getHet() {
    return het;
  }


  public void setHet(Dbv0037JobHet het) {
    this.het = het;
  }


  public Dbv0037Job jobId(Integer jobId) {
    
    this.jobId = jobId;
    return this;
  }

   /**
   * Job id
   * @return jobId
  **/
  @javax.annotation.Nullable
  public Integer getJobId() {
    return jobId;
  }


  public void setJobId(Integer jobId) {
    this.jobId = jobId;
  }


  public Dbv0037Job name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Assigned job name
   * @return name
  **/
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public Dbv0037Job mcs(Dbv0037JobMcs mcs) {
    
    this.mcs = mcs;
    return this;
  }

   /**
   * Get mcs
   * @return mcs
  **/
  @javax.annotation.Nullable
  public Dbv0037JobMcs getMcs() {
    return mcs;
  }


  public void setMcs(Dbv0037JobMcs mcs) {
    this.mcs = mcs;
  }


  public Dbv0037Job nodes(String nodes) {
    
    this.nodes = nodes;
    return this;
  }

   /**
   * List of nodes allocated for job
   * @return nodes
  **/
  @javax.annotation.Nullable
  public String getNodes() {
    return nodes;
  }


  public void setNodes(String nodes) {
    this.nodes = nodes;
  }


  public Dbv0037Job partition(String partition) {
    
    this.partition = partition;
    return this;
  }

   /**
   * Assigned job&#39;s partition
   * @return partition
  **/
  @javax.annotation.Nullable
  public String getPartition() {
    return partition;
  }


  public void setPartition(String partition) {
    this.partition = partition;
  }


  public Dbv0037Job priority(Integer priority) {
    
    this.priority = priority;
    return this;
  }

   /**
   * Priority
   * @return priority
  **/
  @javax.annotation.Nullable
  public Integer getPriority() {
    return priority;
  }


  public void setPriority(Integer priority) {
    this.priority = priority;
  }


  public Dbv0037Job qos(String qos) {
    
    this.qos = qos;
    return this;
  }

   /**
   * Assigned qos name
   * @return qos
  **/
  @javax.annotation.Nullable
  public String getQos() {
    return qos;
  }


  public void setQos(String qos) {
    this.qos = qos;
  }


  public Dbv0037Job required(Dbv0037JobRequired required) {
    
    this.required = required;
    return this;
  }

   /**
   * Get required
   * @return required
  **/
  @javax.annotation.Nullable
  public Dbv0037JobRequired getRequired() {
    return required;
  }


  public void setRequired(Dbv0037JobRequired required) {
    this.required = required;
  }


  public Dbv0037Job killRequestUser(String killRequestUser) {
    
    this.killRequestUser = killRequestUser;
    return this;
  }

   /**
   * User who requested job killed
   * @return killRequestUser
  **/
  @javax.annotation.Nullable
  public String getKillRequestUser() {
    return killRequestUser;
  }


  public void setKillRequestUser(String killRequestUser) {
    this.killRequestUser = killRequestUser;
  }


  public Dbv0037Job reservation(Dbv0037JobReservation reservation) {
    
    this.reservation = reservation;
    return this;
  }

   /**
   * Get reservation
   * @return reservation
  **/
  @javax.annotation.Nullable
  public Dbv0037JobReservation getReservation() {
    return reservation;
  }


  public void setReservation(Dbv0037JobReservation reservation) {
    this.reservation = reservation;
  }


  public Dbv0037Job state(Dbv0037JobState state) {
    
    this.state = state;
    return this;
  }

   /**
   * Get state
   * @return state
  **/
  @javax.annotation.Nullable
  public Dbv0037JobState getState() {
    return state;
  }


  public void setState(Dbv0037JobState state) {
    this.state = state;
  }


  public Dbv0037Job steps(List<Dbv0037JobStep> steps) {
    
    this.steps = steps;
    return this;
  }

  public Dbv0037Job addStepsItem(Dbv0037JobStep stepsItem) {
    if (this.steps == null) {
      this.steps = new ArrayList<>();
    }
    this.steps.add(stepsItem);
    return this;
  }

   /**
   * Job step description
   * @return steps
  **/
  @javax.annotation.Nullable
  public List<Dbv0037JobStep> getSteps() {
    return steps;
  }


  public void setSteps(List<Dbv0037JobStep> steps) {
    this.steps = steps;
  }


  public Dbv0037Job tres(Dbv0037JobTres tres) {
    
    this.tres = tres;
    return this;
  }

   /**
   * Get tres
   * @return tres
  **/
  @javax.annotation.Nullable
  public Dbv0037JobTres getTres() {
    return tres;
  }


  public void setTres(Dbv0037JobTres tres) {
    this.tres = tres;
  }


  public Dbv0037Job user(String user) {
    
    this.user = user;
    return this;
  }

   /**
   * Job user
   * @return user
  **/
  @javax.annotation.Nullable
  public String getUser() {
    return user;
  }


  public void setUser(String user) {
    this.user = user;
  }


  public Dbv0037Job wckey(Dbv0037JobWckey wckey) {
    
    this.wckey = wckey;
    return this;
  }

   /**
   * Get wckey
   * @return wckey
  **/
  @javax.annotation.Nullable
  public Dbv0037JobWckey getWckey() {
    return wckey;
  }


  public void setWckey(Dbv0037JobWckey wckey) {
    this.wckey = wckey;
  }


  public Dbv0037Job workingDirectory(String workingDirectory) {
    
    this.workingDirectory = workingDirectory;
    return this;
  }

   /**
   * Directory where job was initially started
   * @return workingDirectory
  **/
  @javax.annotation.Nullable
  public String getWorkingDirectory() {
    return workingDirectory;
  }


  public void setWorkingDirectory(String workingDirectory) {
    this.workingDirectory = workingDirectory;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Dbv0037Job dbv0037Job = (Dbv0037Job) o;
    return Objects.equals(this.account, dbv0037Job.account) &&
        Objects.equals(this.comment, dbv0037Job.comment) &&
        Objects.equals(this.allocationNodes, dbv0037Job.allocationNodes) &&
        Objects.equals(this.array, dbv0037Job.array) &&
        Objects.equals(this.time, dbv0037Job.time) &&
        Objects.equals(this.association, dbv0037Job.association) &&
        Objects.equals(this.cluster, dbv0037Job.cluster) &&
        Objects.equals(this.constraints, dbv0037Job.constraints) &&
        Objects.equals(this.derivedExitCode, dbv0037Job.derivedExitCode) &&
        Objects.equals(this.exitCode, dbv0037Job.exitCode) &&
        Objects.equals(this.flags, dbv0037Job.flags) &&
        Objects.equals(this.group, dbv0037Job.group) &&
        Objects.equals(this.het, dbv0037Job.het) &&
        Objects.equals(this.jobId, dbv0037Job.jobId) &&
        Objects.equals(this.name, dbv0037Job.name) &&
        Objects.equals(this.mcs, dbv0037Job.mcs) &&
        Objects.equals(this.nodes, dbv0037Job.nodes) &&
        Objects.equals(this.partition, dbv0037Job.partition) &&
        Objects.equals(this.priority, dbv0037Job.priority) &&
        Objects.equals(this.qos, dbv0037Job.qos) &&
        Objects.equals(this.required, dbv0037Job.required) &&
        Objects.equals(this.killRequestUser, dbv0037Job.killRequestUser) &&
        Objects.equals(this.reservation, dbv0037Job.reservation) &&
        Objects.equals(this.state, dbv0037Job.state) &&
        Objects.equals(this.steps, dbv0037Job.steps) &&
        Objects.equals(this.tres, dbv0037Job.tres) &&
        Objects.equals(this.user, dbv0037Job.user) &&
        Objects.equals(this.wckey, dbv0037Job.wckey) &&
        Objects.equals(this.workingDirectory, dbv0037Job.workingDirectory);
  }

  @Override
  public int hashCode() {
    return Objects.hash(account, comment, allocationNodes, array, time, association, cluster, constraints, derivedExitCode, exitCode, flags, group, het, jobId, name, mcs, nodes, partition, priority, qos, required, killRequestUser, reservation, state, steps, tres, user, wckey, workingDirectory);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Dbv0037Job {\n");
    sb.append("    account: ").append(toIndentedString(account)).append("\n");
    sb.append("    comment: ").append(toIndentedString(comment)).append("\n");
    sb.append("    allocationNodes: ").append(toIndentedString(allocationNodes)).append("\n");
    sb.append("    array: ").append(toIndentedString(array)).append("\n");
    sb.append("    time: ").append(toIndentedString(time)).append("\n");
    sb.append("    association: ").append(toIndentedString(association)).append("\n");
    sb.append("    cluster: ").append(toIndentedString(cluster)).append("\n");
    sb.append("    constraints: ").append(toIndentedString(constraints)).append("\n");
    sb.append("    derivedExitCode: ").append(toIndentedString(derivedExitCode)).append("\n");
    sb.append("    exitCode: ").append(toIndentedString(exitCode)).append("\n");
    sb.append("    flags: ").append(toIndentedString(flags)).append("\n");
    sb.append("    group: ").append(toIndentedString(group)).append("\n");
    sb.append("    het: ").append(toIndentedString(het)).append("\n");
    sb.append("    jobId: ").append(toIndentedString(jobId)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    mcs: ").append(toIndentedString(mcs)).append("\n");
    sb.append("    nodes: ").append(toIndentedString(nodes)).append("\n");
    sb.append("    partition: ").append(toIndentedString(partition)).append("\n");
    sb.append("    priority: ").append(toIndentedString(priority)).append("\n");
    sb.append("    qos: ").append(toIndentedString(qos)).append("\n");
    sb.append("    required: ").append(toIndentedString(required)).append("\n");
    sb.append("    killRequestUser: ").append(toIndentedString(killRequestUser)).append("\n");
    sb.append("    reservation: ").append(toIndentedString(reservation)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    steps: ").append(toIndentedString(steps)).append("\n");
    sb.append("    tres: ").append(toIndentedString(tres)).append("\n");
    sb.append("    user: ").append(toIndentedString(user)).append("\n");
    sb.append("    wckey: ").append(toIndentedString(wckey)).append("\n");
    sb.append("    workingDirectory: ").append(toIndentedString(workingDirectory)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("account");
    openapiFields.add("comment");
    openapiFields.add("allocation_nodes");
    openapiFields.add("array");
    openapiFields.add("time");
    openapiFields.add("association");
    openapiFields.add("cluster");
    openapiFields.add("constraints");
    openapiFields.add("derived_exit_code");
    openapiFields.add("exit_code");
    openapiFields.add("flags");
    openapiFields.add("group");
    openapiFields.add("het");
    openapiFields.add("job_id");
    openapiFields.add("name");
    openapiFields.add("mcs");
    openapiFields.add("nodes");
    openapiFields.add("partition");
    openapiFields.add("priority");
    openapiFields.add("qos");
    openapiFields.add("required");
    openapiFields.add("kill_request_user");
    openapiFields.add("reservation");
    openapiFields.add("state");
    openapiFields.add("steps");
    openapiFields.add("tres");
    openapiFields.add("user");
    openapiFields.add("wckey");
    openapiFields.add("working_directory");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Element and throws an exception if issues found
  *
  * @param jsonElement JSON Element
  * @throws IOException if the JSON Element is invalid with respect to Dbv0037Job
  */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!Dbv0037Job.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in Dbv0037Job is not found in the empty JSON string", Dbv0037Job.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!Dbv0037Job.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `Dbv0037Job` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("account") != null && !jsonObj.get("account").isJsonNull()) && !jsonObj.get("account").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `account` to be a primitive type in the JSON string but got `%s`", jsonObj.get("account").toString()));
      }
      // validate the optional field `comment`
      if (jsonObj.get("comment") != null && !jsonObj.get("comment").isJsonNull()) {
        Dbv0037JobComment.validateJsonElement(jsonObj.get("comment"));
      }
      if ((jsonObj.get("allocation_nodes") != null && !jsonObj.get("allocation_nodes").isJsonNull()) && !jsonObj.get("allocation_nodes").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `allocation_nodes` to be a primitive type in the JSON string but got `%s`", jsonObj.get("allocation_nodes").toString()));
      }
      // validate the optional field `array`
      if (jsonObj.get("array") != null && !jsonObj.get("array").isJsonNull()) {
        Dbv0037JobArray.validateJsonElement(jsonObj.get("array"));
      }
      // validate the optional field `time`
      if (jsonObj.get("time") != null && !jsonObj.get("time").isJsonNull()) {
        Dbv0037JobTime.validateJsonElement(jsonObj.get("time"));
      }
      // validate the optional field `association`
      if (jsonObj.get("association") != null && !jsonObj.get("association").isJsonNull()) {
        Dbv0037AssociationShortInfo.validateJsonElement(jsonObj.get("association"));
      }
      if ((jsonObj.get("cluster") != null && !jsonObj.get("cluster").isJsonNull()) && !jsonObj.get("cluster").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `cluster` to be a primitive type in the JSON string but got `%s`", jsonObj.get("cluster").toString()));
      }
      if ((jsonObj.get("constraints") != null && !jsonObj.get("constraints").isJsonNull()) && !jsonObj.get("constraints").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `constraints` to be a primitive type in the JSON string but got `%s`", jsonObj.get("constraints").toString()));
      }
      // validate the optional field `derived_exit_code`
      if (jsonObj.get("derived_exit_code") != null && !jsonObj.get("derived_exit_code").isJsonNull()) {
        Dbv0037JobExitCode.validateJsonElement(jsonObj.get("derived_exit_code"));
      }
      // validate the optional field `exit_code`
      if (jsonObj.get("exit_code") != null && !jsonObj.get("exit_code").isJsonNull()) {
        Dbv0037JobExitCode.validateJsonElement(jsonObj.get("exit_code"));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("flags") != null && !jsonObj.get("flags").isJsonNull() && !jsonObj.get("flags").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `flags` to be an array in the JSON string but got `%s`", jsonObj.get("flags").toString()));
      }
      if ((jsonObj.get("group") != null && !jsonObj.get("group").isJsonNull()) && !jsonObj.get("group").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `group` to be a primitive type in the JSON string but got `%s`", jsonObj.get("group").toString()));
      }
      // validate the optional field `het`
      if (jsonObj.get("het") != null && !jsonObj.get("het").isJsonNull()) {
        Dbv0037JobHet.validateJsonElement(jsonObj.get("het"));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      // validate the optional field `mcs`
      if (jsonObj.get("mcs") != null && !jsonObj.get("mcs").isJsonNull()) {
        Dbv0037JobMcs.validateJsonElement(jsonObj.get("mcs"));
      }
      if ((jsonObj.get("nodes") != null && !jsonObj.get("nodes").isJsonNull()) && !jsonObj.get("nodes").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `nodes` to be a primitive type in the JSON string but got `%s`", jsonObj.get("nodes").toString()));
      }
      if ((jsonObj.get("partition") != null && !jsonObj.get("partition").isJsonNull()) && !jsonObj.get("partition").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `partition` to be a primitive type in the JSON string but got `%s`", jsonObj.get("partition").toString()));
      }
      if ((jsonObj.get("qos") != null && !jsonObj.get("qos").isJsonNull()) && !jsonObj.get("qos").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `qos` to be a primitive type in the JSON string but got `%s`", jsonObj.get("qos").toString()));
      }
      // validate the optional field `required`
      if (jsonObj.get("required") != null && !jsonObj.get("required").isJsonNull()) {
        Dbv0037JobRequired.validateJsonElement(jsonObj.get("required"));
      }
      if ((jsonObj.get("kill_request_user") != null && !jsonObj.get("kill_request_user").isJsonNull()) && !jsonObj.get("kill_request_user").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `kill_request_user` to be a primitive type in the JSON string but got `%s`", jsonObj.get("kill_request_user").toString()));
      }
      // validate the optional field `reservation`
      if (jsonObj.get("reservation") != null && !jsonObj.get("reservation").isJsonNull()) {
        Dbv0037JobReservation.validateJsonElement(jsonObj.get("reservation"));
      }
      // validate the optional field `state`
      if (jsonObj.get("state") != null && !jsonObj.get("state").isJsonNull()) {
        Dbv0037JobState.validateJsonElement(jsonObj.get("state"));
      }
      if (jsonObj.get("steps") != null && !jsonObj.get("steps").isJsonNull()) {
        JsonArray jsonArraysteps = jsonObj.getAsJsonArray("steps");
        if (jsonArraysteps != null) {
          // ensure the json data is an array
          if (!jsonObj.get("steps").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `steps` to be an array in the JSON string but got `%s`", jsonObj.get("steps").toString()));
          }

          // validate the optional field `steps` (array)
          for (int i = 0; i < jsonArraysteps.size(); i++) {
            Dbv0037JobStep.validateJsonElement(jsonArraysteps.get(i));
          };
        }
      }
      // validate the optional field `tres`
      if (jsonObj.get("tres") != null && !jsonObj.get("tres").isJsonNull()) {
        Dbv0037JobTres.validateJsonElement(jsonObj.get("tres"));
      }
      if ((jsonObj.get("user") != null && !jsonObj.get("user").isJsonNull()) && !jsonObj.get("user").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `user` to be a primitive type in the JSON string but got `%s`", jsonObj.get("user").toString()));
      }
      // validate the optional field `wckey`
      if (jsonObj.get("wckey") != null && !jsonObj.get("wckey").isJsonNull()) {
        Dbv0037JobWckey.validateJsonElement(jsonObj.get("wckey"));
      }
      if ((jsonObj.get("working_directory") != null && !jsonObj.get("working_directory").isJsonNull()) && !jsonObj.get("working_directory").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `working_directory` to be a primitive type in the JSON string but got `%s`", jsonObj.get("working_directory").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!Dbv0037Job.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'Dbv0037Job' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<Dbv0037Job> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(Dbv0037Job.class));

       return (TypeAdapter<T>) new TypeAdapter<Dbv0037Job>() {
           @Override
           public void write(JsonWriter out, Dbv0037Job value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public Dbv0037Job read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of Dbv0037Job given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of Dbv0037Job
  * @throws IOException if the JSON string is invalid with respect to Dbv0037Job
  */
  public static Dbv0037Job fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, Dbv0037Job.class);
  }

 /**
  * Convert an instance of Dbv0037Job to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

