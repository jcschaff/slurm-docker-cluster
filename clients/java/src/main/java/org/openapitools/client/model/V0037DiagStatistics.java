/*
 * Slurm Rest API
 * API to access and control Slurm.
 *
 * The version of the OpenAPI document: 0.0.37
 * Contact: sales@schedmd.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Slurm statistics
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class V0037DiagStatistics {
  public static final String SERIALIZED_NAME_PARTS_PACKED = "parts_packed";
  @SerializedName(SERIALIZED_NAME_PARTS_PACKED)
  private Integer partsPacked;

  public static final String SERIALIZED_NAME_REQ_TIME = "req_time";
  @SerializedName(SERIALIZED_NAME_REQ_TIME)
  private Integer reqTime;

  public static final String SERIALIZED_NAME_REQ_TIME_START = "req_time_start";
  @SerializedName(SERIALIZED_NAME_REQ_TIME_START)
  private Integer reqTimeStart;

  public static final String SERIALIZED_NAME_SERVER_THREAD_COUNT = "server_thread_count";
  @SerializedName(SERIALIZED_NAME_SERVER_THREAD_COUNT)
  private Integer serverThreadCount;

  public static final String SERIALIZED_NAME_AGENT_QUEUE_SIZE = "agent_queue_size";
  @SerializedName(SERIALIZED_NAME_AGENT_QUEUE_SIZE)
  private Integer agentQueueSize;

  public static final String SERIALIZED_NAME_AGENT_COUNT = "agent_count";
  @SerializedName(SERIALIZED_NAME_AGENT_COUNT)
  private Integer agentCount;

  public static final String SERIALIZED_NAME_AGENT_THREAD_COUNT = "agent_thread_count";
  @SerializedName(SERIALIZED_NAME_AGENT_THREAD_COUNT)
  private Integer agentThreadCount;

  public static final String SERIALIZED_NAME_DBD_AGENT_QUEUE_SIZE = "dbd_agent_queue_size";
  @SerializedName(SERIALIZED_NAME_DBD_AGENT_QUEUE_SIZE)
  private Integer dbdAgentQueueSize;

  public static final String SERIALIZED_NAME_GETTIMEOFDAY_LATENCY = "gettimeofday_latency";
  @SerializedName(SERIALIZED_NAME_GETTIMEOFDAY_LATENCY)
  private Integer gettimeofdayLatency;

  public static final String SERIALIZED_NAME_SCHEDULE_CYCLE_MAX = "schedule_cycle_max";
  @SerializedName(SERIALIZED_NAME_SCHEDULE_CYCLE_MAX)
  private Integer scheduleCycleMax;

  public static final String SERIALIZED_NAME_SCHEDULE_CYCLE_LAST = "schedule_cycle_last";
  @SerializedName(SERIALIZED_NAME_SCHEDULE_CYCLE_LAST)
  private Integer scheduleCycleLast;

  public static final String SERIALIZED_NAME_SCHEDULE_CYCLE_TOTAL = "schedule_cycle_total";
  @SerializedName(SERIALIZED_NAME_SCHEDULE_CYCLE_TOTAL)
  private Integer scheduleCycleTotal;

  public static final String SERIALIZED_NAME_SCHEDULE_CYCLE_MEAN = "schedule_cycle_mean";
  @SerializedName(SERIALIZED_NAME_SCHEDULE_CYCLE_MEAN)
  private Integer scheduleCycleMean;

  public static final String SERIALIZED_NAME_SCHEDULE_CYCLE_MEAN_DEPTH = "schedule_cycle_mean_depth";
  @SerializedName(SERIALIZED_NAME_SCHEDULE_CYCLE_MEAN_DEPTH)
  private Integer scheduleCycleMeanDepth;

  public static final String SERIALIZED_NAME_SCHEDULE_CYCLE_PER_MINUTE = "schedule_cycle_per_minute";
  @SerializedName(SERIALIZED_NAME_SCHEDULE_CYCLE_PER_MINUTE)
  private Integer scheduleCyclePerMinute;

  public static final String SERIALIZED_NAME_SCHEDULE_QUEUE_LENGTH = "schedule_queue_length";
  @SerializedName(SERIALIZED_NAME_SCHEDULE_QUEUE_LENGTH)
  private Integer scheduleQueueLength;

  public static final String SERIALIZED_NAME_JOBS_SUBMITTED = "jobs_submitted";
  @SerializedName(SERIALIZED_NAME_JOBS_SUBMITTED)
  private Integer jobsSubmitted;

  public static final String SERIALIZED_NAME_JOBS_STARTED = "jobs_started";
  @SerializedName(SERIALIZED_NAME_JOBS_STARTED)
  private Integer jobsStarted;

  public static final String SERIALIZED_NAME_JOBS_COMPLETED = "jobs_completed";
  @SerializedName(SERIALIZED_NAME_JOBS_COMPLETED)
  private Integer jobsCompleted;

  public static final String SERIALIZED_NAME_JOBS_CANCELED = "jobs_canceled";
  @SerializedName(SERIALIZED_NAME_JOBS_CANCELED)
  private Integer jobsCanceled;

  public static final String SERIALIZED_NAME_JOBS_FAILED = "jobs_failed";
  @SerializedName(SERIALIZED_NAME_JOBS_FAILED)
  private Integer jobsFailed;

  public static final String SERIALIZED_NAME_JOBS_PENDING = "jobs_pending";
  @SerializedName(SERIALIZED_NAME_JOBS_PENDING)
  private Integer jobsPending;

  public static final String SERIALIZED_NAME_JOBS_RUNNING = "jobs_running";
  @SerializedName(SERIALIZED_NAME_JOBS_RUNNING)
  private Integer jobsRunning;

  public static final String SERIALIZED_NAME_JOB_STATES_TS = "job_states_ts";
  @SerializedName(SERIALIZED_NAME_JOB_STATES_TS)
  private Integer jobStatesTs;

  public static final String SERIALIZED_NAME_BF_BACKFILLED_JOBS = "bf_backfilled_jobs";
  @SerializedName(SERIALIZED_NAME_BF_BACKFILLED_JOBS)
  private Integer bfBackfilledJobs;

  public static final String SERIALIZED_NAME_BF_LAST_BACKFILLED_JOBS = "bf_last_backfilled_jobs";
  @SerializedName(SERIALIZED_NAME_BF_LAST_BACKFILLED_JOBS)
  private Integer bfLastBackfilledJobs;

  public static final String SERIALIZED_NAME_BF_BACKFILLED_HET_JOBS = "bf_backfilled_het_jobs";
  @SerializedName(SERIALIZED_NAME_BF_BACKFILLED_HET_JOBS)
  private Integer bfBackfilledHetJobs;

  public static final String SERIALIZED_NAME_BF_CYCLE_COUNTER = "bf_cycle_counter";
  @SerializedName(SERIALIZED_NAME_BF_CYCLE_COUNTER)
  private Integer bfCycleCounter;

  public static final String SERIALIZED_NAME_BF_CYCLE_MEAN = "bf_cycle_mean";
  @SerializedName(SERIALIZED_NAME_BF_CYCLE_MEAN)
  private Integer bfCycleMean;

  public static final String SERIALIZED_NAME_BF_CYCLE_MAX = "bf_cycle_max";
  @SerializedName(SERIALIZED_NAME_BF_CYCLE_MAX)
  private Integer bfCycleMax;

  public static final String SERIALIZED_NAME_BF_LAST_DEPTH = "bf_last_depth";
  @SerializedName(SERIALIZED_NAME_BF_LAST_DEPTH)
  private Integer bfLastDepth;

  public static final String SERIALIZED_NAME_BF_LAST_DEPTH_TRY = "bf_last_depth_try";
  @SerializedName(SERIALIZED_NAME_BF_LAST_DEPTH_TRY)
  private Integer bfLastDepthTry;

  public static final String SERIALIZED_NAME_BF_DEPTH_MEAN = "bf_depth_mean";
  @SerializedName(SERIALIZED_NAME_BF_DEPTH_MEAN)
  private Integer bfDepthMean;

  public static final String SERIALIZED_NAME_BF_DEPTH_MEAN_TRY = "bf_depth_mean_try";
  @SerializedName(SERIALIZED_NAME_BF_DEPTH_MEAN_TRY)
  private Integer bfDepthMeanTry;

  public static final String SERIALIZED_NAME_BF_CYCLE_LAST = "bf_cycle_last";
  @SerializedName(SERIALIZED_NAME_BF_CYCLE_LAST)
  private Integer bfCycleLast;

  public static final String SERIALIZED_NAME_BF_QUEUE_LEN = "bf_queue_len";
  @SerializedName(SERIALIZED_NAME_BF_QUEUE_LEN)
  private Integer bfQueueLen;

  public static final String SERIALIZED_NAME_BF_QUEUE_LEN_MEAN = "bf_queue_len_mean";
  @SerializedName(SERIALIZED_NAME_BF_QUEUE_LEN_MEAN)
  private Integer bfQueueLenMean;

  public static final String SERIALIZED_NAME_BF_WHEN_LAST_CYCLE = "bf_when_last_cycle";
  @SerializedName(SERIALIZED_NAME_BF_WHEN_LAST_CYCLE)
  private Integer bfWhenLastCycle;

  public static final String SERIALIZED_NAME_BF_ACTIVE = "bf_active";
  @SerializedName(SERIALIZED_NAME_BF_ACTIVE)
  private Boolean bfActive;

  public V0037DiagStatistics() {
  }

  public V0037DiagStatistics partsPacked(Integer partsPacked) {
    
    this.partsPacked = partsPacked;
    return this;
  }

   /**
   * partition records packed
   * @return partsPacked
  **/
  @javax.annotation.Nullable
  public Integer getPartsPacked() {
    return partsPacked;
  }


  public void setPartsPacked(Integer partsPacked) {
    this.partsPacked = partsPacked;
  }


  public V0037DiagStatistics reqTime(Integer reqTime) {
    
    this.reqTime = reqTime;
    return this;
  }

   /**
   * generation time
   * @return reqTime
  **/
  @javax.annotation.Nullable
  public Integer getReqTime() {
    return reqTime;
  }


  public void setReqTime(Integer reqTime) {
    this.reqTime = reqTime;
  }


  public V0037DiagStatistics reqTimeStart(Integer reqTimeStart) {
    
    this.reqTimeStart = reqTimeStart;
    return this;
  }

   /**
   * data since
   * @return reqTimeStart
  **/
  @javax.annotation.Nullable
  public Integer getReqTimeStart() {
    return reqTimeStart;
  }


  public void setReqTimeStart(Integer reqTimeStart) {
    this.reqTimeStart = reqTimeStart;
  }


  public V0037DiagStatistics serverThreadCount(Integer serverThreadCount) {
    
    this.serverThreadCount = serverThreadCount;
    return this;
  }

   /**
   * Server thread count
   * @return serverThreadCount
  **/
  @javax.annotation.Nullable
  public Integer getServerThreadCount() {
    return serverThreadCount;
  }


  public void setServerThreadCount(Integer serverThreadCount) {
    this.serverThreadCount = serverThreadCount;
  }


  public V0037DiagStatistics agentQueueSize(Integer agentQueueSize) {
    
    this.agentQueueSize = agentQueueSize;
    return this;
  }

   /**
   * Agent queue size
   * @return agentQueueSize
  **/
  @javax.annotation.Nullable
  public Integer getAgentQueueSize() {
    return agentQueueSize;
  }


  public void setAgentQueueSize(Integer agentQueueSize) {
    this.agentQueueSize = agentQueueSize;
  }


  public V0037DiagStatistics agentCount(Integer agentCount) {
    
    this.agentCount = agentCount;
    return this;
  }

   /**
   * Agent count
   * @return agentCount
  **/
  @javax.annotation.Nullable
  public Integer getAgentCount() {
    return agentCount;
  }


  public void setAgentCount(Integer agentCount) {
    this.agentCount = agentCount;
  }


  public V0037DiagStatistics agentThreadCount(Integer agentThreadCount) {
    
    this.agentThreadCount = agentThreadCount;
    return this;
  }

   /**
   * Agent thread count
   * @return agentThreadCount
  **/
  @javax.annotation.Nullable
  public Integer getAgentThreadCount() {
    return agentThreadCount;
  }


  public void setAgentThreadCount(Integer agentThreadCount) {
    this.agentThreadCount = agentThreadCount;
  }


  public V0037DiagStatistics dbdAgentQueueSize(Integer dbdAgentQueueSize) {
    
    this.dbdAgentQueueSize = dbdAgentQueueSize;
    return this;
  }

   /**
   * DBD Agent queue size
   * @return dbdAgentQueueSize
  **/
  @javax.annotation.Nullable
  public Integer getDbdAgentQueueSize() {
    return dbdAgentQueueSize;
  }


  public void setDbdAgentQueueSize(Integer dbdAgentQueueSize) {
    this.dbdAgentQueueSize = dbdAgentQueueSize;
  }


  public V0037DiagStatistics gettimeofdayLatency(Integer gettimeofdayLatency) {
    
    this.gettimeofdayLatency = gettimeofdayLatency;
    return this;
  }

   /**
   * Latency for 1000 calls to gettimeofday()
   * @return gettimeofdayLatency
  **/
  @javax.annotation.Nullable
  public Integer getGettimeofdayLatency() {
    return gettimeofdayLatency;
  }


  public void setGettimeofdayLatency(Integer gettimeofdayLatency) {
    this.gettimeofdayLatency = gettimeofdayLatency;
  }


  public V0037DiagStatistics scheduleCycleMax(Integer scheduleCycleMax) {
    
    this.scheduleCycleMax = scheduleCycleMax;
    return this;
  }

   /**
   * Main Schedule max cycle
   * @return scheduleCycleMax
  **/
  @javax.annotation.Nullable
  public Integer getScheduleCycleMax() {
    return scheduleCycleMax;
  }


  public void setScheduleCycleMax(Integer scheduleCycleMax) {
    this.scheduleCycleMax = scheduleCycleMax;
  }


  public V0037DiagStatistics scheduleCycleLast(Integer scheduleCycleLast) {
    
    this.scheduleCycleLast = scheduleCycleLast;
    return this;
  }

   /**
   * Main Schedule last cycle
   * @return scheduleCycleLast
  **/
  @javax.annotation.Nullable
  public Integer getScheduleCycleLast() {
    return scheduleCycleLast;
  }


  public void setScheduleCycleLast(Integer scheduleCycleLast) {
    this.scheduleCycleLast = scheduleCycleLast;
  }


  public V0037DiagStatistics scheduleCycleTotal(Integer scheduleCycleTotal) {
    
    this.scheduleCycleTotal = scheduleCycleTotal;
    return this;
  }

   /**
   * Main Schedule cycle iterations
   * @return scheduleCycleTotal
  **/
  @javax.annotation.Nullable
  public Integer getScheduleCycleTotal() {
    return scheduleCycleTotal;
  }


  public void setScheduleCycleTotal(Integer scheduleCycleTotal) {
    this.scheduleCycleTotal = scheduleCycleTotal;
  }


  public V0037DiagStatistics scheduleCycleMean(Integer scheduleCycleMean) {
    
    this.scheduleCycleMean = scheduleCycleMean;
    return this;
  }

   /**
   * Average time for Schedule Max cycle
   * @return scheduleCycleMean
  **/
  @javax.annotation.Nullable
  public Integer getScheduleCycleMean() {
    return scheduleCycleMean;
  }


  public void setScheduleCycleMean(Integer scheduleCycleMean) {
    this.scheduleCycleMean = scheduleCycleMean;
  }


  public V0037DiagStatistics scheduleCycleMeanDepth(Integer scheduleCycleMeanDepth) {
    
    this.scheduleCycleMeanDepth = scheduleCycleMeanDepth;
    return this;
  }

   /**
   * Average depth for Schedule Max cycle
   * @return scheduleCycleMeanDepth
  **/
  @javax.annotation.Nullable
  public Integer getScheduleCycleMeanDepth() {
    return scheduleCycleMeanDepth;
  }


  public void setScheduleCycleMeanDepth(Integer scheduleCycleMeanDepth) {
    this.scheduleCycleMeanDepth = scheduleCycleMeanDepth;
  }


  public V0037DiagStatistics scheduleCyclePerMinute(Integer scheduleCyclePerMinute) {
    
    this.scheduleCyclePerMinute = scheduleCyclePerMinute;
    return this;
  }

   /**
   * Main Schedule Cycles per minute
   * @return scheduleCyclePerMinute
  **/
  @javax.annotation.Nullable
  public Integer getScheduleCyclePerMinute() {
    return scheduleCyclePerMinute;
  }


  public void setScheduleCyclePerMinute(Integer scheduleCyclePerMinute) {
    this.scheduleCyclePerMinute = scheduleCyclePerMinute;
  }


  public V0037DiagStatistics scheduleQueueLength(Integer scheduleQueueLength) {
    
    this.scheduleQueueLength = scheduleQueueLength;
    return this;
  }

   /**
   * Main Schedule Last queue length
   * @return scheduleQueueLength
  **/
  @javax.annotation.Nullable
  public Integer getScheduleQueueLength() {
    return scheduleQueueLength;
  }


  public void setScheduleQueueLength(Integer scheduleQueueLength) {
    this.scheduleQueueLength = scheduleQueueLength;
  }


  public V0037DiagStatistics jobsSubmitted(Integer jobsSubmitted) {
    
    this.jobsSubmitted = jobsSubmitted;
    return this;
  }

   /**
   * Job submitted
   * @return jobsSubmitted
  **/
  @javax.annotation.Nullable
  public Integer getJobsSubmitted() {
    return jobsSubmitted;
  }


  public void setJobsSubmitted(Integer jobsSubmitted) {
    this.jobsSubmitted = jobsSubmitted;
  }


  public V0037DiagStatistics jobsStarted(Integer jobsStarted) {
    
    this.jobsStarted = jobsStarted;
    return this;
  }

   /**
   * Job started
   * @return jobsStarted
  **/
  @javax.annotation.Nullable
  public Integer getJobsStarted() {
    return jobsStarted;
  }


  public void setJobsStarted(Integer jobsStarted) {
    this.jobsStarted = jobsStarted;
  }


  public V0037DiagStatistics jobsCompleted(Integer jobsCompleted) {
    
    this.jobsCompleted = jobsCompleted;
    return this;
  }

   /**
   * Job completed
   * @return jobsCompleted
  **/
  @javax.annotation.Nullable
  public Integer getJobsCompleted() {
    return jobsCompleted;
  }


  public void setJobsCompleted(Integer jobsCompleted) {
    this.jobsCompleted = jobsCompleted;
  }


  public V0037DiagStatistics jobsCanceled(Integer jobsCanceled) {
    
    this.jobsCanceled = jobsCanceled;
    return this;
  }

   /**
   * Job cancelled
   * @return jobsCanceled
  **/
  @javax.annotation.Nullable
  public Integer getJobsCanceled() {
    return jobsCanceled;
  }


  public void setJobsCanceled(Integer jobsCanceled) {
    this.jobsCanceled = jobsCanceled;
  }


  public V0037DiagStatistics jobsFailed(Integer jobsFailed) {
    
    this.jobsFailed = jobsFailed;
    return this;
  }

   /**
   * Job failed
   * @return jobsFailed
  **/
  @javax.annotation.Nullable
  public Integer getJobsFailed() {
    return jobsFailed;
  }


  public void setJobsFailed(Integer jobsFailed) {
    this.jobsFailed = jobsFailed;
  }


  public V0037DiagStatistics jobsPending(Integer jobsPending) {
    
    this.jobsPending = jobsPending;
    return this;
  }

   /**
   * Job pending
   * @return jobsPending
  **/
  @javax.annotation.Nullable
  public Integer getJobsPending() {
    return jobsPending;
  }


  public void setJobsPending(Integer jobsPending) {
    this.jobsPending = jobsPending;
  }


  public V0037DiagStatistics jobsRunning(Integer jobsRunning) {
    
    this.jobsRunning = jobsRunning;
    return this;
  }

   /**
   * Job running
   * @return jobsRunning
  **/
  @javax.annotation.Nullable
  public Integer getJobsRunning() {
    return jobsRunning;
  }


  public void setJobsRunning(Integer jobsRunning) {
    this.jobsRunning = jobsRunning;
  }


  public V0037DiagStatistics jobStatesTs(Integer jobStatesTs) {
    
    this.jobStatesTs = jobStatesTs;
    return this;
  }

   /**
   * Job states timestamp
   * @return jobStatesTs
  **/
  @javax.annotation.Nullable
  public Integer getJobStatesTs() {
    return jobStatesTs;
  }


  public void setJobStatesTs(Integer jobStatesTs) {
    this.jobStatesTs = jobStatesTs;
  }


  public V0037DiagStatistics bfBackfilledJobs(Integer bfBackfilledJobs) {
    
    this.bfBackfilledJobs = bfBackfilledJobs;
    return this;
  }

   /**
   * Total backfilled jobs (since last slurm start)
   * @return bfBackfilledJobs
  **/
  @javax.annotation.Nullable
  public Integer getBfBackfilledJobs() {
    return bfBackfilledJobs;
  }


  public void setBfBackfilledJobs(Integer bfBackfilledJobs) {
    this.bfBackfilledJobs = bfBackfilledJobs;
  }


  public V0037DiagStatistics bfLastBackfilledJobs(Integer bfLastBackfilledJobs) {
    
    this.bfLastBackfilledJobs = bfLastBackfilledJobs;
    return this;
  }

   /**
   * Total backfilled jobs (since last stats cycle start)
   * @return bfLastBackfilledJobs
  **/
  @javax.annotation.Nullable
  public Integer getBfLastBackfilledJobs() {
    return bfLastBackfilledJobs;
  }


  public void setBfLastBackfilledJobs(Integer bfLastBackfilledJobs) {
    this.bfLastBackfilledJobs = bfLastBackfilledJobs;
  }


  public V0037DiagStatistics bfBackfilledHetJobs(Integer bfBackfilledHetJobs) {
    
    this.bfBackfilledHetJobs = bfBackfilledHetJobs;
    return this;
  }

   /**
   * Total backfilled heterogeneous job components
   * @return bfBackfilledHetJobs
  **/
  @javax.annotation.Nullable
  public Integer getBfBackfilledHetJobs() {
    return bfBackfilledHetJobs;
  }


  public void setBfBackfilledHetJobs(Integer bfBackfilledHetJobs) {
    this.bfBackfilledHetJobs = bfBackfilledHetJobs;
  }


  public V0037DiagStatistics bfCycleCounter(Integer bfCycleCounter) {
    
    this.bfCycleCounter = bfCycleCounter;
    return this;
  }

   /**
   * Backfill Schedule Total cycles
   * @return bfCycleCounter
  **/
  @javax.annotation.Nullable
  public Integer getBfCycleCounter() {
    return bfCycleCounter;
  }


  public void setBfCycleCounter(Integer bfCycleCounter) {
    this.bfCycleCounter = bfCycleCounter;
  }


  public V0037DiagStatistics bfCycleMean(Integer bfCycleMean) {
    
    this.bfCycleMean = bfCycleMean;
    return this;
  }

   /**
   * Backfill Schedule Mean cycle
   * @return bfCycleMean
  **/
  @javax.annotation.Nullable
  public Integer getBfCycleMean() {
    return bfCycleMean;
  }


  public void setBfCycleMean(Integer bfCycleMean) {
    this.bfCycleMean = bfCycleMean;
  }


  public V0037DiagStatistics bfCycleMax(Integer bfCycleMax) {
    
    this.bfCycleMax = bfCycleMax;
    return this;
  }

   /**
   * Backfill Schedule Max cycle time
   * @return bfCycleMax
  **/
  @javax.annotation.Nullable
  public Integer getBfCycleMax() {
    return bfCycleMax;
  }


  public void setBfCycleMax(Integer bfCycleMax) {
    this.bfCycleMax = bfCycleMax;
  }


  public V0037DiagStatistics bfLastDepth(Integer bfLastDepth) {
    
    this.bfLastDepth = bfLastDepth;
    return this;
  }

   /**
   * Backfill Schedule Last depth cycle
   * @return bfLastDepth
  **/
  @javax.annotation.Nullable
  public Integer getBfLastDepth() {
    return bfLastDepth;
  }


  public void setBfLastDepth(Integer bfLastDepth) {
    this.bfLastDepth = bfLastDepth;
  }


  public V0037DiagStatistics bfLastDepthTry(Integer bfLastDepthTry) {
    
    this.bfLastDepthTry = bfLastDepthTry;
    return this;
  }

   /**
   * Backfill Schedule Mean cycle (try sched)
   * @return bfLastDepthTry
  **/
  @javax.annotation.Nullable
  public Integer getBfLastDepthTry() {
    return bfLastDepthTry;
  }


  public void setBfLastDepthTry(Integer bfLastDepthTry) {
    this.bfLastDepthTry = bfLastDepthTry;
  }


  public V0037DiagStatistics bfDepthMean(Integer bfDepthMean) {
    
    this.bfDepthMean = bfDepthMean;
    return this;
  }

   /**
   * Backfill Schedule Depth Mean
   * @return bfDepthMean
  **/
  @javax.annotation.Nullable
  public Integer getBfDepthMean() {
    return bfDepthMean;
  }


  public void setBfDepthMean(Integer bfDepthMean) {
    this.bfDepthMean = bfDepthMean;
  }


  public V0037DiagStatistics bfDepthMeanTry(Integer bfDepthMeanTry) {
    
    this.bfDepthMeanTry = bfDepthMeanTry;
    return this;
  }

   /**
   * Backfill Schedule Depth Mean (try sched)
   * @return bfDepthMeanTry
  **/
  @javax.annotation.Nullable
  public Integer getBfDepthMeanTry() {
    return bfDepthMeanTry;
  }


  public void setBfDepthMeanTry(Integer bfDepthMeanTry) {
    this.bfDepthMeanTry = bfDepthMeanTry;
  }


  public V0037DiagStatistics bfCycleLast(Integer bfCycleLast) {
    
    this.bfCycleLast = bfCycleLast;
    return this;
  }

   /**
   * Backfill Schedule Last cycle time
   * @return bfCycleLast
  **/
  @javax.annotation.Nullable
  public Integer getBfCycleLast() {
    return bfCycleLast;
  }


  public void setBfCycleLast(Integer bfCycleLast) {
    this.bfCycleLast = bfCycleLast;
  }


  public V0037DiagStatistics bfQueueLen(Integer bfQueueLen) {
    
    this.bfQueueLen = bfQueueLen;
    return this;
  }

   /**
   * Backfill Schedule Last queue length
   * @return bfQueueLen
  **/
  @javax.annotation.Nullable
  public Integer getBfQueueLen() {
    return bfQueueLen;
  }


  public void setBfQueueLen(Integer bfQueueLen) {
    this.bfQueueLen = bfQueueLen;
  }


  public V0037DiagStatistics bfQueueLenMean(Integer bfQueueLenMean) {
    
    this.bfQueueLenMean = bfQueueLenMean;
    return this;
  }

   /**
   * Backfill Schedule Mean queue length
   * @return bfQueueLenMean
  **/
  @javax.annotation.Nullable
  public Integer getBfQueueLenMean() {
    return bfQueueLenMean;
  }


  public void setBfQueueLenMean(Integer bfQueueLenMean) {
    this.bfQueueLenMean = bfQueueLenMean;
  }


  public V0037DiagStatistics bfWhenLastCycle(Integer bfWhenLastCycle) {
    
    this.bfWhenLastCycle = bfWhenLastCycle;
    return this;
  }

   /**
   * Last cycle timestamp
   * @return bfWhenLastCycle
  **/
  @javax.annotation.Nullable
  public Integer getBfWhenLastCycle() {
    return bfWhenLastCycle;
  }


  public void setBfWhenLastCycle(Integer bfWhenLastCycle) {
    this.bfWhenLastCycle = bfWhenLastCycle;
  }


  public V0037DiagStatistics bfActive(Boolean bfActive) {
    
    this.bfActive = bfActive;
    return this;
  }

   /**
   * Backfill Schedule currently active
   * @return bfActive
  **/
  @javax.annotation.Nullable
  public Boolean getBfActive() {
    return bfActive;
  }


  public void setBfActive(Boolean bfActive) {
    this.bfActive = bfActive;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    V0037DiagStatistics v0037DiagStatistics = (V0037DiagStatistics) o;
    return Objects.equals(this.partsPacked, v0037DiagStatistics.partsPacked) &&
        Objects.equals(this.reqTime, v0037DiagStatistics.reqTime) &&
        Objects.equals(this.reqTimeStart, v0037DiagStatistics.reqTimeStart) &&
        Objects.equals(this.serverThreadCount, v0037DiagStatistics.serverThreadCount) &&
        Objects.equals(this.agentQueueSize, v0037DiagStatistics.agentQueueSize) &&
        Objects.equals(this.agentCount, v0037DiagStatistics.agentCount) &&
        Objects.equals(this.agentThreadCount, v0037DiagStatistics.agentThreadCount) &&
        Objects.equals(this.dbdAgentQueueSize, v0037DiagStatistics.dbdAgentQueueSize) &&
        Objects.equals(this.gettimeofdayLatency, v0037DiagStatistics.gettimeofdayLatency) &&
        Objects.equals(this.scheduleCycleMax, v0037DiagStatistics.scheduleCycleMax) &&
        Objects.equals(this.scheduleCycleLast, v0037DiagStatistics.scheduleCycleLast) &&
        Objects.equals(this.scheduleCycleTotal, v0037DiagStatistics.scheduleCycleTotal) &&
        Objects.equals(this.scheduleCycleMean, v0037DiagStatistics.scheduleCycleMean) &&
        Objects.equals(this.scheduleCycleMeanDepth, v0037DiagStatistics.scheduleCycleMeanDepth) &&
        Objects.equals(this.scheduleCyclePerMinute, v0037DiagStatistics.scheduleCyclePerMinute) &&
        Objects.equals(this.scheduleQueueLength, v0037DiagStatistics.scheduleQueueLength) &&
        Objects.equals(this.jobsSubmitted, v0037DiagStatistics.jobsSubmitted) &&
        Objects.equals(this.jobsStarted, v0037DiagStatistics.jobsStarted) &&
        Objects.equals(this.jobsCompleted, v0037DiagStatistics.jobsCompleted) &&
        Objects.equals(this.jobsCanceled, v0037DiagStatistics.jobsCanceled) &&
        Objects.equals(this.jobsFailed, v0037DiagStatistics.jobsFailed) &&
        Objects.equals(this.jobsPending, v0037DiagStatistics.jobsPending) &&
        Objects.equals(this.jobsRunning, v0037DiagStatistics.jobsRunning) &&
        Objects.equals(this.jobStatesTs, v0037DiagStatistics.jobStatesTs) &&
        Objects.equals(this.bfBackfilledJobs, v0037DiagStatistics.bfBackfilledJobs) &&
        Objects.equals(this.bfLastBackfilledJobs, v0037DiagStatistics.bfLastBackfilledJobs) &&
        Objects.equals(this.bfBackfilledHetJobs, v0037DiagStatistics.bfBackfilledHetJobs) &&
        Objects.equals(this.bfCycleCounter, v0037DiagStatistics.bfCycleCounter) &&
        Objects.equals(this.bfCycleMean, v0037DiagStatistics.bfCycleMean) &&
        Objects.equals(this.bfCycleMax, v0037DiagStatistics.bfCycleMax) &&
        Objects.equals(this.bfLastDepth, v0037DiagStatistics.bfLastDepth) &&
        Objects.equals(this.bfLastDepthTry, v0037DiagStatistics.bfLastDepthTry) &&
        Objects.equals(this.bfDepthMean, v0037DiagStatistics.bfDepthMean) &&
        Objects.equals(this.bfDepthMeanTry, v0037DiagStatistics.bfDepthMeanTry) &&
        Objects.equals(this.bfCycleLast, v0037DiagStatistics.bfCycleLast) &&
        Objects.equals(this.bfQueueLen, v0037DiagStatistics.bfQueueLen) &&
        Objects.equals(this.bfQueueLenMean, v0037DiagStatistics.bfQueueLenMean) &&
        Objects.equals(this.bfWhenLastCycle, v0037DiagStatistics.bfWhenLastCycle) &&
        Objects.equals(this.bfActive, v0037DiagStatistics.bfActive);
  }

  @Override
  public int hashCode() {
    return Objects.hash(partsPacked, reqTime, reqTimeStart, serverThreadCount, agentQueueSize, agentCount, agentThreadCount, dbdAgentQueueSize, gettimeofdayLatency, scheduleCycleMax, scheduleCycleLast, scheduleCycleTotal, scheduleCycleMean, scheduleCycleMeanDepth, scheduleCyclePerMinute, scheduleQueueLength, jobsSubmitted, jobsStarted, jobsCompleted, jobsCanceled, jobsFailed, jobsPending, jobsRunning, jobStatesTs, bfBackfilledJobs, bfLastBackfilledJobs, bfBackfilledHetJobs, bfCycleCounter, bfCycleMean, bfCycleMax, bfLastDepth, bfLastDepthTry, bfDepthMean, bfDepthMeanTry, bfCycleLast, bfQueueLen, bfQueueLenMean, bfWhenLastCycle, bfActive);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class V0037DiagStatistics {\n");
    sb.append("    partsPacked: ").append(toIndentedString(partsPacked)).append("\n");
    sb.append("    reqTime: ").append(toIndentedString(reqTime)).append("\n");
    sb.append("    reqTimeStart: ").append(toIndentedString(reqTimeStart)).append("\n");
    sb.append("    serverThreadCount: ").append(toIndentedString(serverThreadCount)).append("\n");
    sb.append("    agentQueueSize: ").append(toIndentedString(agentQueueSize)).append("\n");
    sb.append("    agentCount: ").append(toIndentedString(agentCount)).append("\n");
    sb.append("    agentThreadCount: ").append(toIndentedString(agentThreadCount)).append("\n");
    sb.append("    dbdAgentQueueSize: ").append(toIndentedString(dbdAgentQueueSize)).append("\n");
    sb.append("    gettimeofdayLatency: ").append(toIndentedString(gettimeofdayLatency)).append("\n");
    sb.append("    scheduleCycleMax: ").append(toIndentedString(scheduleCycleMax)).append("\n");
    sb.append("    scheduleCycleLast: ").append(toIndentedString(scheduleCycleLast)).append("\n");
    sb.append("    scheduleCycleTotal: ").append(toIndentedString(scheduleCycleTotal)).append("\n");
    sb.append("    scheduleCycleMean: ").append(toIndentedString(scheduleCycleMean)).append("\n");
    sb.append("    scheduleCycleMeanDepth: ").append(toIndentedString(scheduleCycleMeanDepth)).append("\n");
    sb.append("    scheduleCyclePerMinute: ").append(toIndentedString(scheduleCyclePerMinute)).append("\n");
    sb.append("    scheduleQueueLength: ").append(toIndentedString(scheduleQueueLength)).append("\n");
    sb.append("    jobsSubmitted: ").append(toIndentedString(jobsSubmitted)).append("\n");
    sb.append("    jobsStarted: ").append(toIndentedString(jobsStarted)).append("\n");
    sb.append("    jobsCompleted: ").append(toIndentedString(jobsCompleted)).append("\n");
    sb.append("    jobsCanceled: ").append(toIndentedString(jobsCanceled)).append("\n");
    sb.append("    jobsFailed: ").append(toIndentedString(jobsFailed)).append("\n");
    sb.append("    jobsPending: ").append(toIndentedString(jobsPending)).append("\n");
    sb.append("    jobsRunning: ").append(toIndentedString(jobsRunning)).append("\n");
    sb.append("    jobStatesTs: ").append(toIndentedString(jobStatesTs)).append("\n");
    sb.append("    bfBackfilledJobs: ").append(toIndentedString(bfBackfilledJobs)).append("\n");
    sb.append("    bfLastBackfilledJobs: ").append(toIndentedString(bfLastBackfilledJobs)).append("\n");
    sb.append("    bfBackfilledHetJobs: ").append(toIndentedString(bfBackfilledHetJobs)).append("\n");
    sb.append("    bfCycleCounter: ").append(toIndentedString(bfCycleCounter)).append("\n");
    sb.append("    bfCycleMean: ").append(toIndentedString(bfCycleMean)).append("\n");
    sb.append("    bfCycleMax: ").append(toIndentedString(bfCycleMax)).append("\n");
    sb.append("    bfLastDepth: ").append(toIndentedString(bfLastDepth)).append("\n");
    sb.append("    bfLastDepthTry: ").append(toIndentedString(bfLastDepthTry)).append("\n");
    sb.append("    bfDepthMean: ").append(toIndentedString(bfDepthMean)).append("\n");
    sb.append("    bfDepthMeanTry: ").append(toIndentedString(bfDepthMeanTry)).append("\n");
    sb.append("    bfCycleLast: ").append(toIndentedString(bfCycleLast)).append("\n");
    sb.append("    bfQueueLen: ").append(toIndentedString(bfQueueLen)).append("\n");
    sb.append("    bfQueueLenMean: ").append(toIndentedString(bfQueueLenMean)).append("\n");
    sb.append("    bfWhenLastCycle: ").append(toIndentedString(bfWhenLastCycle)).append("\n");
    sb.append("    bfActive: ").append(toIndentedString(bfActive)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("parts_packed");
    openapiFields.add("req_time");
    openapiFields.add("req_time_start");
    openapiFields.add("server_thread_count");
    openapiFields.add("agent_queue_size");
    openapiFields.add("agent_count");
    openapiFields.add("agent_thread_count");
    openapiFields.add("dbd_agent_queue_size");
    openapiFields.add("gettimeofday_latency");
    openapiFields.add("schedule_cycle_max");
    openapiFields.add("schedule_cycle_last");
    openapiFields.add("schedule_cycle_total");
    openapiFields.add("schedule_cycle_mean");
    openapiFields.add("schedule_cycle_mean_depth");
    openapiFields.add("schedule_cycle_per_minute");
    openapiFields.add("schedule_queue_length");
    openapiFields.add("jobs_submitted");
    openapiFields.add("jobs_started");
    openapiFields.add("jobs_completed");
    openapiFields.add("jobs_canceled");
    openapiFields.add("jobs_failed");
    openapiFields.add("jobs_pending");
    openapiFields.add("jobs_running");
    openapiFields.add("job_states_ts");
    openapiFields.add("bf_backfilled_jobs");
    openapiFields.add("bf_last_backfilled_jobs");
    openapiFields.add("bf_backfilled_het_jobs");
    openapiFields.add("bf_cycle_counter");
    openapiFields.add("bf_cycle_mean");
    openapiFields.add("bf_cycle_max");
    openapiFields.add("bf_last_depth");
    openapiFields.add("bf_last_depth_try");
    openapiFields.add("bf_depth_mean");
    openapiFields.add("bf_depth_mean_try");
    openapiFields.add("bf_cycle_last");
    openapiFields.add("bf_queue_len");
    openapiFields.add("bf_queue_len_mean");
    openapiFields.add("bf_when_last_cycle");
    openapiFields.add("bf_active");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Element and throws an exception if issues found
  *
  * @param jsonElement JSON Element
  * @throws IOException if the JSON Element is invalid with respect to V0037DiagStatistics
  */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!V0037DiagStatistics.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in V0037DiagStatistics is not found in the empty JSON string", V0037DiagStatistics.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!V0037DiagStatistics.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `V0037DiagStatistics` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!V0037DiagStatistics.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'V0037DiagStatistics' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<V0037DiagStatistics> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(V0037DiagStatistics.class));

       return (TypeAdapter<T>) new TypeAdapter<V0037DiagStatistics>() {
           @Override
           public void write(JsonWriter out, V0037DiagStatistics value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public V0037DiagStatistics read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of V0037DiagStatistics given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of V0037DiagStatistics
  * @throws IOException if the JSON string is invalid with respect to V0037DiagStatistics
  */
  public static V0037DiagStatistics fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, V0037DiagStatistics.class);
  }

 /**
  * Convert an instance of V0037DiagStatistics to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

