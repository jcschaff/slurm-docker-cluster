/*
 * Slurm Rest API
 * API to access and control Slurm.
 *
 * The version of the OpenAPI document: 0.0.37
 * Contact: sales@schedmd.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.Dbv0037TresListInner;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Max TRES minutes per settings
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class Dbv0037QosLimitsMaxTresMinutesPer {
  public static final String SERIALIZED_NAME_JOB = "job";
  @SerializedName(SERIALIZED_NAME_JOB)
  private List<Dbv0037TresListInner> job;

  public static final String SERIALIZED_NAME_ACCOUNT = "account";
  @SerializedName(SERIALIZED_NAME_ACCOUNT)
  private List<Dbv0037TresListInner> account;

  public static final String SERIALIZED_NAME_USER = "user";
  @SerializedName(SERIALIZED_NAME_USER)
  private List<Dbv0037TresListInner> user;

  public Dbv0037QosLimitsMaxTresMinutesPer() {
  }

  public Dbv0037QosLimitsMaxTresMinutesPer job(List<Dbv0037TresListInner> job) {
    
    this.job = job;
    return this;
  }

  public Dbv0037QosLimitsMaxTresMinutesPer addJobItem(Dbv0037TresListInner jobItem) {
    if (this.job == null) {
      this.job = new ArrayList<>();
    }
    this.job.add(jobItem);
    return this;
  }

   /**
   * TRES list of attributes
   * @return job
  **/
  @javax.annotation.Nullable
  public List<Dbv0037TresListInner> getJob() {
    return job;
  }


  public void setJob(List<Dbv0037TresListInner> job) {
    this.job = job;
  }


  public Dbv0037QosLimitsMaxTresMinutesPer account(List<Dbv0037TresListInner> account) {
    
    this.account = account;
    return this;
  }

  public Dbv0037QosLimitsMaxTresMinutesPer addAccountItem(Dbv0037TresListInner accountItem) {
    if (this.account == null) {
      this.account = new ArrayList<>();
    }
    this.account.add(accountItem);
    return this;
  }

   /**
   * TRES list of attributes
   * @return account
  **/
  @javax.annotation.Nullable
  public List<Dbv0037TresListInner> getAccount() {
    return account;
  }


  public void setAccount(List<Dbv0037TresListInner> account) {
    this.account = account;
  }


  public Dbv0037QosLimitsMaxTresMinutesPer user(List<Dbv0037TresListInner> user) {
    
    this.user = user;
    return this;
  }

  public Dbv0037QosLimitsMaxTresMinutesPer addUserItem(Dbv0037TresListInner userItem) {
    if (this.user == null) {
      this.user = new ArrayList<>();
    }
    this.user.add(userItem);
    return this;
  }

   /**
   * TRES list of attributes
   * @return user
  **/
  @javax.annotation.Nullable
  public List<Dbv0037TresListInner> getUser() {
    return user;
  }


  public void setUser(List<Dbv0037TresListInner> user) {
    this.user = user;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Dbv0037QosLimitsMaxTresMinutesPer dbv0037QosLimitsMaxTresMinutesPer = (Dbv0037QosLimitsMaxTresMinutesPer) o;
    return Objects.equals(this.job, dbv0037QosLimitsMaxTresMinutesPer.job) &&
        Objects.equals(this.account, dbv0037QosLimitsMaxTresMinutesPer.account) &&
        Objects.equals(this.user, dbv0037QosLimitsMaxTresMinutesPer.user);
  }

  @Override
  public int hashCode() {
    return Objects.hash(job, account, user);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Dbv0037QosLimitsMaxTresMinutesPer {\n");
    sb.append("    job: ").append(toIndentedString(job)).append("\n");
    sb.append("    account: ").append(toIndentedString(account)).append("\n");
    sb.append("    user: ").append(toIndentedString(user)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("job");
    openapiFields.add("account");
    openapiFields.add("user");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Element and throws an exception if issues found
  *
  * @param jsonElement JSON Element
  * @throws IOException if the JSON Element is invalid with respect to Dbv0037QosLimitsMaxTresMinutesPer
  */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!Dbv0037QosLimitsMaxTresMinutesPer.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in Dbv0037QosLimitsMaxTresMinutesPer is not found in the empty JSON string", Dbv0037QosLimitsMaxTresMinutesPer.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!Dbv0037QosLimitsMaxTresMinutesPer.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `Dbv0037QosLimitsMaxTresMinutesPer` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (jsonObj.get("job") != null && !jsonObj.get("job").isJsonNull()) {
        JsonArray jsonArrayjob = jsonObj.getAsJsonArray("job");
        if (jsonArrayjob != null) {
          // ensure the json data is an array
          if (!jsonObj.get("job").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `job` to be an array in the JSON string but got `%s`", jsonObj.get("job").toString()));
          }

          // validate the optional field `job` (array)
          for (int i = 0; i < jsonArrayjob.size(); i++) {
            Dbv0037TresListInner.validateJsonElement(jsonArrayjob.get(i));
          };
        }
      }
      if (jsonObj.get("account") != null && !jsonObj.get("account").isJsonNull()) {
        JsonArray jsonArrayaccount = jsonObj.getAsJsonArray("account");
        if (jsonArrayaccount != null) {
          // ensure the json data is an array
          if (!jsonObj.get("account").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `account` to be an array in the JSON string but got `%s`", jsonObj.get("account").toString()));
          }

          // validate the optional field `account` (array)
          for (int i = 0; i < jsonArrayaccount.size(); i++) {
            Dbv0037TresListInner.validateJsonElement(jsonArrayaccount.get(i));
          };
        }
      }
      if (jsonObj.get("user") != null && !jsonObj.get("user").isJsonNull()) {
        JsonArray jsonArrayuser = jsonObj.getAsJsonArray("user");
        if (jsonArrayuser != null) {
          // ensure the json data is an array
          if (!jsonObj.get("user").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `user` to be an array in the JSON string but got `%s`", jsonObj.get("user").toString()));
          }

          // validate the optional field `user` (array)
          for (int i = 0; i < jsonArrayuser.size(); i++) {
            Dbv0037TresListInner.validateJsonElement(jsonArrayuser.get(i));
          };
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!Dbv0037QosLimitsMaxTresMinutesPer.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'Dbv0037QosLimitsMaxTresMinutesPer' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<Dbv0037QosLimitsMaxTresMinutesPer> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(Dbv0037QosLimitsMaxTresMinutesPer.class));

       return (TypeAdapter<T>) new TypeAdapter<Dbv0037QosLimitsMaxTresMinutesPer>() {
           @Override
           public void write(JsonWriter out, Dbv0037QosLimitsMaxTresMinutesPer value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public Dbv0037QosLimitsMaxTresMinutesPer read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of Dbv0037QosLimitsMaxTresMinutesPer given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of Dbv0037QosLimitsMaxTresMinutesPer
  * @throws IOException if the JSON string is invalid with respect to Dbv0037QosLimitsMaxTresMinutesPer
  */
  public static Dbv0037QosLimitsMaxTresMinutesPer fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, Dbv0037QosLimitsMaxTresMinutesPer.class);
  }

 /**
  * Convert an instance of Dbv0037QosLimitsMaxTresMinutesPer to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

