/*
 * Slurm Rest API
 * API to access and control Slurm.
 *
 * The version of the OpenAPI document: 0.0.37
 * Contact: sales@schedmd.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.Dbv0037JobExitCode;
import org.openapitools.client.model.Dbv0037JobStepCPU;
import org.openapitools.client.model.Dbv0037JobStepNodes;
import org.openapitools.client.model.Dbv0037JobStepStatistics;
import org.openapitools.client.model.Dbv0037JobStepStep;
import org.openapitools.client.model.Dbv0037JobStepTask;
import org.openapitools.client.model.Dbv0037JobStepTasks;
import org.openapitools.client.model.Dbv0037JobStepTime;
import org.openapitools.client.model.Dbv0037JobStepTres;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Dbv0037JobStep
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class Dbv0037JobStep {
  public static final String SERIALIZED_NAME_TIME = "time";
  @SerializedName(SERIALIZED_NAME_TIME)
  private Dbv0037JobStepTime time;

  public static final String SERIALIZED_NAME_EXIT_CODE = "exit_code";
  @SerializedName(SERIALIZED_NAME_EXIT_CODE)
  private Dbv0037JobExitCode exitCode;

  public static final String SERIALIZED_NAME_NODES = "nodes";
  @SerializedName(SERIALIZED_NAME_NODES)
  private Dbv0037JobStepNodes nodes;

  public static final String SERIALIZED_NAME_TASKS = "tasks";
  @SerializedName(SERIALIZED_NAME_TASKS)
  private Dbv0037JobStepTasks tasks;

  public static final String SERIALIZED_NAME_PID = "pid";
  @SerializedName(SERIALIZED_NAME_PID)
  private String pid;

  public static final String SERIALIZED_NAME_C_P_U = "CPU";
  @SerializedName(SERIALIZED_NAME_C_P_U)
  private Dbv0037JobStepCPU CPU;

  public static final String SERIALIZED_NAME_KILL_REQUEST_USER = "kill_request_user";
  @SerializedName(SERIALIZED_NAME_KILL_REQUEST_USER)
  private String killRequestUser;

  public static final String SERIALIZED_NAME_STATE = "state";
  @SerializedName(SERIALIZED_NAME_STATE)
  private String state;

  public static final String SERIALIZED_NAME_STATISTICS = "statistics";
  @SerializedName(SERIALIZED_NAME_STATISTICS)
  private Dbv0037JobStepStatistics statistics;

  public static final String SERIALIZED_NAME_STEP = "step";
  @SerializedName(SERIALIZED_NAME_STEP)
  private Dbv0037JobStepStep step;

  public static final String SERIALIZED_NAME_TASK = "task";
  @SerializedName(SERIALIZED_NAME_TASK)
  private Dbv0037JobStepTask task;

  public static final String SERIALIZED_NAME_TRES = "tres";
  @SerializedName(SERIALIZED_NAME_TRES)
  private Dbv0037JobStepTres tres;

  public Dbv0037JobStep() {
  }

  public Dbv0037JobStep time(Dbv0037JobStepTime time) {
    
    this.time = time;
    return this;
  }

   /**
   * Get time
   * @return time
  **/
  @javax.annotation.Nullable
  public Dbv0037JobStepTime getTime() {
    return time;
  }


  public void setTime(Dbv0037JobStepTime time) {
    this.time = time;
  }


  public Dbv0037JobStep exitCode(Dbv0037JobExitCode exitCode) {
    
    this.exitCode = exitCode;
    return this;
  }

   /**
   * Get exitCode
   * @return exitCode
  **/
  @javax.annotation.Nullable
  public Dbv0037JobExitCode getExitCode() {
    return exitCode;
  }


  public void setExitCode(Dbv0037JobExitCode exitCode) {
    this.exitCode = exitCode;
  }


  public Dbv0037JobStep nodes(Dbv0037JobStepNodes nodes) {
    
    this.nodes = nodes;
    return this;
  }

   /**
   * Get nodes
   * @return nodes
  **/
  @javax.annotation.Nullable
  public Dbv0037JobStepNodes getNodes() {
    return nodes;
  }


  public void setNodes(Dbv0037JobStepNodes nodes) {
    this.nodes = nodes;
  }


  public Dbv0037JobStep tasks(Dbv0037JobStepTasks tasks) {
    
    this.tasks = tasks;
    return this;
  }

   /**
   * Get tasks
   * @return tasks
  **/
  @javax.annotation.Nullable
  public Dbv0037JobStepTasks getTasks() {
    return tasks;
  }


  public void setTasks(Dbv0037JobStepTasks tasks) {
    this.tasks = tasks;
  }


  public Dbv0037JobStep pid(String pid) {
    
    this.pid = pid;
    return this;
  }

   /**
   * First process PID
   * @return pid
  **/
  @javax.annotation.Nullable
  public String getPid() {
    return pid;
  }


  public void setPid(String pid) {
    this.pid = pid;
  }


  public Dbv0037JobStep CPU(Dbv0037JobStepCPU CPU) {
    
    this.CPU = CPU;
    return this;
  }

   /**
   * Get CPU
   * @return CPU
  **/
  @javax.annotation.Nullable
  public Dbv0037JobStepCPU getCPU() {
    return CPU;
  }


  public void setCPU(Dbv0037JobStepCPU CPU) {
    this.CPU = CPU;
  }


  public Dbv0037JobStep killRequestUser(String killRequestUser) {
    
    this.killRequestUser = killRequestUser;
    return this;
  }

   /**
   * User who requested job killed
   * @return killRequestUser
  **/
  @javax.annotation.Nullable
  public String getKillRequestUser() {
    return killRequestUser;
  }


  public void setKillRequestUser(String killRequestUser) {
    this.killRequestUser = killRequestUser;
  }


  public Dbv0037JobStep state(String state) {
    
    this.state = state;
    return this;
  }

   /**
   * State of job step
   * @return state
  **/
  @javax.annotation.Nullable
  public String getState() {
    return state;
  }


  public void setState(String state) {
    this.state = state;
  }


  public Dbv0037JobStep statistics(Dbv0037JobStepStatistics statistics) {
    
    this.statistics = statistics;
    return this;
  }

   /**
   * Get statistics
   * @return statistics
  **/
  @javax.annotation.Nullable
  public Dbv0037JobStepStatistics getStatistics() {
    return statistics;
  }


  public void setStatistics(Dbv0037JobStepStatistics statistics) {
    this.statistics = statistics;
  }


  public Dbv0037JobStep step(Dbv0037JobStepStep step) {
    
    this.step = step;
    return this;
  }

   /**
   * Get step
   * @return step
  **/
  @javax.annotation.Nullable
  public Dbv0037JobStepStep getStep() {
    return step;
  }


  public void setStep(Dbv0037JobStepStep step) {
    this.step = step;
  }


  public Dbv0037JobStep task(Dbv0037JobStepTask task) {
    
    this.task = task;
    return this;
  }

   /**
   * Get task
   * @return task
  **/
  @javax.annotation.Nullable
  public Dbv0037JobStepTask getTask() {
    return task;
  }


  public void setTask(Dbv0037JobStepTask task) {
    this.task = task;
  }


  public Dbv0037JobStep tres(Dbv0037JobStepTres tres) {
    
    this.tres = tres;
    return this;
  }

   /**
   * Get tres
   * @return tres
  **/
  @javax.annotation.Nullable
  public Dbv0037JobStepTres getTres() {
    return tres;
  }


  public void setTres(Dbv0037JobStepTres tres) {
    this.tres = tres;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Dbv0037JobStep dbv0037JobStep = (Dbv0037JobStep) o;
    return Objects.equals(this.time, dbv0037JobStep.time) &&
        Objects.equals(this.exitCode, dbv0037JobStep.exitCode) &&
        Objects.equals(this.nodes, dbv0037JobStep.nodes) &&
        Objects.equals(this.tasks, dbv0037JobStep.tasks) &&
        Objects.equals(this.pid, dbv0037JobStep.pid) &&
        Objects.equals(this.CPU, dbv0037JobStep.CPU) &&
        Objects.equals(this.killRequestUser, dbv0037JobStep.killRequestUser) &&
        Objects.equals(this.state, dbv0037JobStep.state) &&
        Objects.equals(this.statistics, dbv0037JobStep.statistics) &&
        Objects.equals(this.step, dbv0037JobStep.step) &&
        Objects.equals(this.task, dbv0037JobStep.task) &&
        Objects.equals(this.tres, dbv0037JobStep.tres);
  }

  @Override
  public int hashCode() {
    return Objects.hash(time, exitCode, nodes, tasks, pid, CPU, killRequestUser, state, statistics, step, task, tres);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Dbv0037JobStep {\n");
    sb.append("    time: ").append(toIndentedString(time)).append("\n");
    sb.append("    exitCode: ").append(toIndentedString(exitCode)).append("\n");
    sb.append("    nodes: ").append(toIndentedString(nodes)).append("\n");
    sb.append("    tasks: ").append(toIndentedString(tasks)).append("\n");
    sb.append("    pid: ").append(toIndentedString(pid)).append("\n");
    sb.append("    CPU: ").append(toIndentedString(CPU)).append("\n");
    sb.append("    killRequestUser: ").append(toIndentedString(killRequestUser)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    statistics: ").append(toIndentedString(statistics)).append("\n");
    sb.append("    step: ").append(toIndentedString(step)).append("\n");
    sb.append("    task: ").append(toIndentedString(task)).append("\n");
    sb.append("    tres: ").append(toIndentedString(tres)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("time");
    openapiFields.add("exit_code");
    openapiFields.add("nodes");
    openapiFields.add("tasks");
    openapiFields.add("pid");
    openapiFields.add("CPU");
    openapiFields.add("kill_request_user");
    openapiFields.add("state");
    openapiFields.add("statistics");
    openapiFields.add("step");
    openapiFields.add("task");
    openapiFields.add("tres");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Element and throws an exception if issues found
  *
  * @param jsonElement JSON Element
  * @throws IOException if the JSON Element is invalid with respect to Dbv0037JobStep
  */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!Dbv0037JobStep.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in Dbv0037JobStep is not found in the empty JSON string", Dbv0037JobStep.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!Dbv0037JobStep.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `Dbv0037JobStep` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `time`
      if (jsonObj.get("time") != null && !jsonObj.get("time").isJsonNull()) {
        Dbv0037JobStepTime.validateJsonElement(jsonObj.get("time"));
      }
      // validate the optional field `exit_code`
      if (jsonObj.get("exit_code") != null && !jsonObj.get("exit_code").isJsonNull()) {
        Dbv0037JobExitCode.validateJsonElement(jsonObj.get("exit_code"));
      }
      // validate the optional field `nodes`
      if (jsonObj.get("nodes") != null && !jsonObj.get("nodes").isJsonNull()) {
        Dbv0037JobStepNodes.validateJsonElement(jsonObj.get("nodes"));
      }
      // validate the optional field `tasks`
      if (jsonObj.get("tasks") != null && !jsonObj.get("tasks").isJsonNull()) {
        Dbv0037JobStepTasks.validateJsonElement(jsonObj.get("tasks"));
      }
      if ((jsonObj.get("pid") != null && !jsonObj.get("pid").isJsonNull()) && !jsonObj.get("pid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `pid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("pid").toString()));
      }
      // validate the optional field `CPU`
      if (jsonObj.get("CPU") != null && !jsonObj.get("CPU").isJsonNull()) {
        Dbv0037JobStepCPU.validateJsonElement(jsonObj.get("CPU"));
      }
      if ((jsonObj.get("kill_request_user") != null && !jsonObj.get("kill_request_user").isJsonNull()) && !jsonObj.get("kill_request_user").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `kill_request_user` to be a primitive type in the JSON string but got `%s`", jsonObj.get("kill_request_user").toString()));
      }
      if ((jsonObj.get("state") != null && !jsonObj.get("state").isJsonNull()) && !jsonObj.get("state").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `state` to be a primitive type in the JSON string but got `%s`", jsonObj.get("state").toString()));
      }
      // validate the optional field `statistics`
      if (jsonObj.get("statistics") != null && !jsonObj.get("statistics").isJsonNull()) {
        Dbv0037JobStepStatistics.validateJsonElement(jsonObj.get("statistics"));
      }
      // validate the optional field `step`
      if (jsonObj.get("step") != null && !jsonObj.get("step").isJsonNull()) {
        Dbv0037JobStepStep.validateJsonElement(jsonObj.get("step"));
      }
      // validate the optional field `task`
      if (jsonObj.get("task") != null && !jsonObj.get("task").isJsonNull()) {
        Dbv0037JobStepTask.validateJsonElement(jsonObj.get("task"));
      }
      // validate the optional field `tres`
      if (jsonObj.get("tres") != null && !jsonObj.get("tres").isJsonNull()) {
        Dbv0037JobStepTres.validateJsonElement(jsonObj.get("tres"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!Dbv0037JobStep.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'Dbv0037JobStep' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<Dbv0037JobStep> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(Dbv0037JobStep.class));

       return (TypeAdapter<T>) new TypeAdapter<Dbv0037JobStep>() {
           @Override
           public void write(JsonWriter out, Dbv0037JobStep value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public Dbv0037JobStep read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of Dbv0037JobStep given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of Dbv0037JobStep
  * @throws IOException if the JSON string is invalid with respect to Dbv0037JobStep
  */
  public static Dbv0037JobStep fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, Dbv0037JobStep.class);
  }

 /**
  * Convert an instance of Dbv0037JobStep to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

