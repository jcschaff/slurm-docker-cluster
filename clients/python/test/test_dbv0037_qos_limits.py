# coding: utf-8

"""
    Slurm Rest API

    API to access and control Slurm.

    The version of the OpenAPI document: 0.0.37
    Contact: sales@schedmd.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from openapi_client.models.dbv0037_qos_limits import Dbv0037QosLimits  # noqa: E501

class TestDbv0037QosLimits(unittest.TestCase):
    """Dbv0037QosLimits unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Dbv0037QosLimits:
        """Test Dbv0037QosLimits
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Dbv0037QosLimits`
        """
        model = Dbv0037QosLimits()  # noqa: E501
        if include_optional:
            return Dbv0037QosLimits(
                factor = 1.337,
                max = openapi_client.models.dbv0_0_37_qos_limits_max.dbv0_0_37_qos_limits_max(
                    wall_clock = openapi_client.models.dbv0_0_37_qos_limits_max_wall_clock.dbv0_0_37_qos_limits_max_wall_clock(
                        per = openapi_client.models.dbv0_0_37_qos_limits_max_wall_clock_per.dbv0_0_37_qos_limits_max_wall_clock_per(
                            qos = 56, 
                            job = 56, ), ), 
                    jobs = openapi_client.models.dbv0_0_37_qos_limits_max_jobs.dbv0_0_37_qos_limits_max_jobs(
                        active_jobs = openapi_client.models.dbv0_0_37_qos_limits_max_jobs_active_jobs.dbv0_0_37_qos_limits_max_jobs_active_jobs(), ), 
                    accruing = openapi_client.models.dbv0_0_37_qos_limits_max_accruing.dbv0_0_37_qos_limits_max_accruing(), 
                    tres = openapi_client.models.dbv0_0_37_qos_limits_max_tres.dbv0_0_37_qos_limits_max_tres(
                        minutes = openapi_client.models.dbv0_0_37_qos_limits_max_tres_minutes.dbv0_0_37_qos_limits_max_tres_minutes(), ), ),
                min = openapi_client.models.dbv0_0_37_qos_limits_min.dbv0_0_37_qos_limits_min(
                    priority_threshold = 56, 
                    tres = openapi_client.models.dbv0_0_37_qos_limits_min_tres.dbv0_0_37_qos_limits_min_tres(
                        per = openapi_client.models.dbv0_0_37_qos_limits_min_tres_per.dbv0_0_37_qos_limits_min_tres_per(
                            job = [
                                openapi_client.models.dbv0_0_37_tres_list_inner.dbv0_0_37_tres_list_inner(
                                    type = '', 
                                    name = '', 
                                    id = 56, 
                                    count = 56, )
                                ], ), ), )
            )
        else:
            return Dbv0037QosLimits(
        )
        """

    def testDbv0037QosLimits(self):
        """Test Dbv0037QosLimits"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
