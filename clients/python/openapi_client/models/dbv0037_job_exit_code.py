# coding: utf-8

"""
    Slurm Rest API

    API to access and control Slurm.

    The version of the OpenAPI document: 0.0.37
    Contact: sales@schedmd.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import pprint
import re  # noqa: F401
import json


from typing import Optional
from pydantic import BaseModel, Field, StrictInt, StrictStr
from openapi_client.models.dbv0037_job_exit_code_signal import Dbv0037JobExitCodeSignal

class Dbv0037JobExitCode(BaseModel):
    """
    Dbv0037JobExitCode
    """
    status: Optional[StrictStr] = Field(None, description="Job exit status")
    return_code: Optional[StrictInt] = Field(None, description="Return code from parent process")
    signal: Optional[Dbv0037JobExitCodeSignal] = None
    __properties = ["status", "return_code", "signal"]

    class Config:
        """Pydantic configuration"""
        allow_population_by_field_name = True
        validate_assignment = True

    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.dict(by_alias=True))

    def to_json(self) -> str:
        """Returns the JSON representation of the model using alias"""
        return json.dumps(self.to_dict())

    @classmethod
    def from_json(cls, json_str: str) -> Dbv0037JobExitCode:
        """Create an instance of Dbv0037JobExitCode from a JSON string"""
        return cls.from_dict(json.loads(json_str))

    def to_dict(self):
        """Returns the dictionary representation of the model using alias"""
        _dict = self.dict(by_alias=True,
                          exclude={
                          },
                          exclude_none=True)
        # override the default output from pydantic by calling `to_dict()` of signal
        if self.signal:
            _dict['signal'] = self.signal.to_dict()
        return _dict

    @classmethod
    def from_dict(cls, obj: dict) -> Dbv0037JobExitCode:
        """Create an instance of Dbv0037JobExitCode from a dict"""
        if obj is None:
            return None

        if not isinstance(obj, dict):
            return Dbv0037JobExitCode.parse_obj(obj)

        _obj = Dbv0037JobExitCode.parse_obj({
            "status": obj.get("status"),
            "return_code": obj.get("return_code"),
            "signal": Dbv0037JobExitCodeSignal.from_dict(obj.get("signal")) if obj.get("signal") is not None else None
        })
        return _obj


